---
layout: post
title: Mobile app
---

“개발자가 되고 싶으세요?” 라는 책을 읽으며 정리한 자료이다.

모바일 앱의 다양한 형태

1.	네이티브 앱
일반적인 앱. 운영체제에서 제공하는 API를 사용해야 한다.  ( JAVA   Object-C + Swift )
기본 언어 + 많은 api와 프레임워크, 그리고 SDK를 잘 사용해야 한다.

	API? 라이브러리와 비슷한데 필요한 기능을 설명하는 문서까지 함께 제공.
	프레임워크? 프로그램 개발을 쉽게 하기 위해 공통적인 부분을 만들어 놓고 
필요한 부분만을 구현해 사용할 수 있도록 제공하는 코드의 묶음
	
	<장점>
기기의 다양한 하드웨어를 사용 가능. 또한 앱 실행 시에 변환 없이 바로 시행되기 때문에 빠르다. 오프라인에서 사용 가능한 앱도 제작 가능.
	 <단점>
	  다양한 플랫폼 동시지원이 어렵다. 또한 배포작업이 오래 걸린다.(마켓 업로드).
	
2.	웹 앱
반응형 웹 기술을 사용하면 다양한 페이지에 적용 가능. 플랫폼에 관계없이 적용 가능. 

그러나 기능이 많아지면 느려진다. 하드웨어에 접근하기 어렵고 유도가 어렵다.
	런칭 초기에 사람 모으기 어렵다.

3.	하이브리드
웹과 네이티브를 모두 사용하는 경우이다. 대부분은 웹으로 표현되고 메뉴 부분이나 툴바 같은 부분은 네이티브로 만들어진다. 
코르도바 :  HTML  CSS  JS 만 이용해서 앱 개발 가능. 그러나 플랫폼이 다른 경우 가이드라인에 어긋나지 않는지 주의해야 한다. 

	페이스북은 웹앱을 쓰다가 네이티브 앱으로 변경했다.
	그 이유는
-	새로운 기능이 매우 자주 추가 -> UI가 계속 바뀜
-	웹으로는 따라가기 어렵다.

개발 기간이 충분하고 세밀한 컨트롤을 원한다면 네이티브!

<앱 개발 과정>
1.	앱 개발 & 패키징
2.	마켓을 통한 배포

안드로이드 – 안드로이드 스튜디오
아이폰	   - Xcode 

앱 개발 과정
1.	기능 정의		:  어떤 기능을 만들 것인가? 또 필요한 기술적인 요소 판단
2.	UX 설계		:  화면 설계.
3.	기능 구현
4.	디자인 반영
5.	테스트
6.	알파/베타 배포	:  앱 사용성 통계 서비스(google analytics) 크래시 리포팅 서비스( Crashlytics )
7.	정식 배포

유의할 점
-	다양한 크기의 모바일 기기  :  크기를 지정할 때, dip를 사용
