---
layout: post
title: LIS algorithm
---

최장 증가 부분 순열.

수열에서 오름차순으로 정렬된 가장 긴 부분수열 찾는 문제이다.
10 20 40 30 70 50 60 
이 있을 때,
[ 10 20 30 50 60]	   혹은	  [10 20 40 50 60 ]
이때의 길이를 구하는 것이 LIS이다.

How?
1.	Lower Bound 이용해보기
10 20 40 30 70 50 60  이 주어졌다고 해보자.
먼저 10을 넣는다. 			10
20은 10보다 크니 오른쪽에 넣는다.	10 20
40은 20보다 크니 오른쪽에 넣는다	10 20 40
30은 40보다 작다. 40자리를 뺐자		10 20 30
70은 30보다 크니 오른쪽에 넣는다.	10 20 30 70
50은 70보다 작으니 70자리를 뺏자	10 20 30 50
60	넣자.				10 20 30 50 60
-> LIS는 5

	무슨 원리로 이 방식이 가능할까?
	뒤에 추가하는 방식으로 가기에 오름차순 배열을 구할 수 있다.
	비교하는 대상은 가장 오른쪽의 수이다.
	그렇기에 이왕이면 작은 숫자가 오른쪽에 오는 것이 적절하다.


2.	인덱스 트리를 이용하기
배열에 중복이 없다는 전제 하에  배열 위치와 함께 정렬해준다.
값:	10  20 40  30  70  50  60
위치:	1   2  3   4   5   6   7

참고
https://ko.wikipedia.org/wiki/%EC%B5%9C%EC%9E%A5_%EC%A6%9D%EA%B0%80_%EB%B6%80%EB%B6%84_%EC%88%98%EC%97%B4

http://dyngina.tistory.com/16 
